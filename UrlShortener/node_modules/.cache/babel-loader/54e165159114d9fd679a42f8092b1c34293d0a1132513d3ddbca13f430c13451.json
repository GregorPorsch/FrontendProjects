{"ast":null,"code":"var _jsxFileName = \"/Users/gregorporsch/Documents/React/URL Shortener/project/src/components/sections/Shortener.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { shortenUrl } from \"../../services/api\";\nimport { Button, ShortenedLink } from \"../common\";\nimport \"../../assets/styles/sections/Shortener.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shortener = () => {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [invalidUrl, setInvalidUrl] = useState(false);\n  const [shortenedLinks, setShortenedLinks] = useState({});\n  const handleShortenUrl = async url => {\n    if (!url) {\n      setInvalidUrl(true);\n      return;\n    }\n    setInvalidUrl(false);\n    const shortenedUrl = await shortenUrl(url);\n    if (shortenedUrl) {\n      setShortenedLinks(prevLinks => ({\n        ...prevLinks,\n        [url]: shortenedUrl\n      }));\n    } else {\n      setInvalidUrl(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shortener\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shortener-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shortener-input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: invalidUrl ? \"invalid\" : \"\",\n          type: \"text\",\n          value: url,\n          placeholder: \"Shorten a link here...\",\n          onChange: event => {\n            setUrl(event.target.value);\n            setInvalidUrl(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: invalidUrl && \"Please add a link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        action: () => handleShortenUrl(url),\n        children: \"Shorten It!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shortener-output\",\n      children: Object.entries(shortenedLinks).length > 0 && Object.entries(shortenedLinks).slice(-3).reverse().map(([originalUrl, shortenedUrl], index) => /*#__PURE__*/_jsxDEV(ShortenedLink, {\n        originalUrl: originalUrl,\n        shortenedUrl: shortenedUrl\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Shortener, \"gLooLD0tRHmE837vmOPeIfDjZ1E=\");\n_c = Shortener;\nexport default Shortener;\nvar _c;\n$RefreshReg$(_c, \"Shortener\");","map":{"version":3,"names":["React","useState","shortenUrl","Button","ShortenedLink","jsxDEV","_jsxDEV","Shortener","_s","url","setUrl","invalidUrl","setInvalidUrl","shortenedLinks","setShortenedLinks","handleShortenUrl","shortenedUrl","prevLinks","className","children","type","value","placeholder","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","action","Object","entries","length","slice","reverse","map","originalUrl","index","_c","$RefreshReg$"],"sources":["/Users/gregorporsch/Documents/React/URL Shortener/project/src/components/sections/Shortener.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { shortenUrl } from \"../../services/api\";\nimport { Button, ShortenedLink } from \"../common\";\nimport \"../../assets/styles/sections/Shortener.css\";\n\nconst Shortener = () => {\n  const [url, setUrl] = useState(\"\");\n  const [invalidUrl, setInvalidUrl] = useState(false);\n  const [shortenedLinks, setShortenedLinks] = useState({});\n\n  const handleShortenUrl = async (url) => {\n    if (!url) {\n      setInvalidUrl(true);\n      return;\n    }\n    setInvalidUrl(false);\n    const shortenedUrl = await shortenUrl(url);\n    if (shortenedUrl) {\n      setShortenedLinks((prevLinks) => ({\n        ...prevLinks,\n        [url]: shortenedUrl,\n      }));\n    } else {\n      setInvalidUrl(true);\n    }\n  };\n\n  return (\n    <div className=\"shortener\">\n      <div className=\"shortener-input\">\n        <div className=\"shortener-input-field\">\n          <input\n            className={invalidUrl ? \"invalid\" : \"\"}\n            type=\"text\"\n            value={url}\n            placeholder=\"Shorten a link here...\"\n            onChange={(event) => {\n              setUrl(event.target.value);\n              setInvalidUrl(false);\n            }}\n          />\n          <span className=\"error-message\">{invalidUrl && \"Please add a link\"}</span>\n        </div>\n        <Button action={() => handleShortenUrl(url)}>Shorten It!</Button>\n      </div>\n      <div className=\"shortener-output\">\n        {Object.entries(shortenedLinks).length > 0 &&\n          Object.entries(shortenedLinks)\n            .slice(-3)\n            .reverse()\n            .map(([originalUrl, shortenedUrl], index) => (\n              <ShortenedLink key={index} originalUrl={originalUrl} shortenedUrl={shortenedUrl} />\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Shortener;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}